"""mf_triggers

Revision ID: 075d344ae2cc
Revises: 427db8f31999
Create Date: 2024-09-13 13:12:16.951311

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '075d344ae2cc'
down_revision = '427db8f31999'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('''
        CREATE OR REPLACE FUNCTION org_delete_trigger_function()
        RETURNS TRIGGER AS $$
        BEGIN
            -- Delete from attached_metadata_form
            DELETE FROM attached_metadata_form 
            WHERE "entityUri" = OLD."organizationUri" 
              AND "entityType" = 'Organization';
         
            -- Delete from metadata_form
            DELETE FROM metadata_form 
            WHERE "homeEntity" = OLD."organizationUri" 
              AND visibility = 'Organization-Wide';
         
            RETURN OLD;
        END;
        $$ LANGUAGE plpgsql;

        -- Create the trigger for organization table
        CREATE TRIGGER org_delete_trigger
        BEFORE DELETE ON organization
        FOR EACH ROW
        EXECUTE FUNCTION org_delete_trigger_function();
    ''')

    op.execute('''
        CREATE OR REPLACE FUNCTION env_delete_trigger_function()
        RETURNS TRIGGER AS $$
        BEGIN
            -- Delete from attached_metadata_form
            DELETE FROM attached_metadata_form
            WHERE "entityUri" = OLD."environmentUri"
              AND "entityType" = 'Environment';
        
            -- Delete from metadata_form
            DELETE FROM metadata_form
            WHERE "homeEntity" = OLD."environmentUri"
              AND visibility = 'Environment-Wide';
        
            RETURN OLD;
        END;
        $$ LANGUAGE plpgsql;

        -- Create the trigger for environment table
        CREATE TRIGGER env_delete_trigger
        BEFORE DELETE ON environment
        FOR EACH ROW
        EXECUTE FUNCTION env_delete_trigger_function();
    ''')

    op.execute('''
        CREATE OR REPLACE FUNCTION dataset_delete_trigger_function()
        RETURNS TRIGGER AS $$
        BEGIN
            -- Delete from attached_metadata_form
            DELETE FROM attached_metadata_form
            WHERE "entityUri" = OLD."datasetUri"
              AND "entityType" = 'Dataset';
        
            RETURN OLD;
        END;
        $$ LANGUAGE plpgsql;

        -- Create the trigger for dataset table
        CREATE TRIGGER dataset_delete_trigger
        BEFORE DELETE ON dataset
        FOR EACH ROW
        EXECUTE FUNCTION dataset_delete_trigger_function();
    ''')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        '''
        -- Drop the org_delete_trigger
        DROP TRIGGER IF EXISTS org_delete_trigger ON organization;
        
        -- Drop the org_delete_trigger_function
        DROP FUNCTION IF EXISTS org_delete_trigger_function;
        '''
    )

    op.execute(
        '''
        -- Drop the env_delete_trigger
        DROP TRIGGER IF EXISTS env_delete_trigger ON environment;
        
        -- Drop the env_delete_trigger_function
        DROP FUNCTION IF EXISTS env_delete_trigger_function;
        '''
    )

    op.execute(
        '''
        -- Drop the dataset_delete_trigger
        DROP TRIGGER IF EXISTS dataset_delete_trigger ON dataset;
        
        -- Drop the dataset_delete_trigger_function
        DROP FUNCTION IF EXISTS dataset_delete_trigger_function;
        '''
    )
    # ### end Alembic commands ###
