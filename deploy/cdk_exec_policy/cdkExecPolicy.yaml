AWSTemplateFormatVersion: 2010-09-09
Description: Custom least privilege IAM policy for linking environments to dataall
Parameters:
  AwsAccountId:
    Description: AWS AccountId of the dataall INFRASTRUCTURE account that we wish to link this environment with.
    Type: String
  PolicyName:
    Description: IAM policy name (copy/paste from the UI)
    Type: String
    Default: 'DataAllCustomCDKPolicy'
  EnvironmentResourcePrefix:
    Description: The resource prefix value of the dataall environment. It MUST match the resource prefix that we use when we create the environment.
    Type: String
Resources:
  CDKCustomExecutionPolicy0:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${PolicyName}-1'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 
              - 'athena:CreateWorkGroup'
              - 'athena:TagResource'
              - 'athena:GetWorkGroup'
              - 'athena:DeleteWorkGroup'
            Resource:
              - !Sub 'arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${EnvironmentResourcePrefix}*'
          - Action:
              - 'iam:CreatePolicy'
              - 'iam:GetPolicy'
              - 'iam:DetachRolePolicy'
              - 'iam:DeletePolicy'
              - 'iam:DeleteRole'
              - 'iam:DeleteRolePolicy'
              - 'lambda:DeleteLayerVersion'
              - 'lambda:DeleteFunction'
              - 'iam:TagRole'
              - 'iam:PassRole'
              - 'lambda:TagResource'
              - 'lambda:DeleteFunctionEventInvokeConfig'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${EnvironmentResourcePrefix}*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${EnvironmentResourcePrefix}*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/RoleSagemakerStudioUsers'
              - !Sub 'arn:aws:lambda:*:${AWS::AccountId}:layer:${EnvironmentResourcePrefix}*'
              - !Sub 'arn:aws:lambda:*:${AWS::AccountId}:function:${EnvironmentResourcePrefix}*'
          - Effect: Allow
            Action:
              - 'iam:CreatePolicyVersion'
              - 'iam:DeletePolicyVersion'
            Resource:
               - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/service-role/AWSQuickSight*'
          - Effect: Allow
            Action:
              - 'ds:AuthorizeApplication'
              - 'ds:UnauthorizeApplication'
              - 'ds:CheckAlias'
              - 'ds:CreateAlias'
              - 'ds:Describe*'
              - 'ds:DeleteDirectory'
              - 'ds:CreateIdentityPoolDirectory'
              - 'quicksight:CreateAdmin'
              - 'quicksight:CreateUser'
              - 'quicksight:Subscribe'
              - 'quicksight:Get*'
              - 'quicksight:SearchDirectoryGroups'
              - 'quicksight:SetGroupMapping'
              - 'quicksight:RegisterUser'
              - 'quicksight:Describe*'
            Resource: '*'
          - Effect: Deny
            Action:
              - 'quicksight:Unsubscribe'
            Resource: '*'
          - Action:
              - 'kms:CreateAlias'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/*'
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutBucketNotification'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${EnvironmentResourcePrefix}-logging-*'
          - Action:
              - 'kms:CreateAlias'
              - 'kms:CreateGrant'
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
              - 'kms:EnableKeyRotation'
              - 'kms:Encrypt'
              - 'kms:GetKeyPolicy'
              - 'kms:GetKeyRotationStatus'
              - 'kms:ListResourceTags'
              - 'kms:PutKeyPolicy'
              - 'kms:TagResource'
              - 'kms:DeleteAlias'
            Effect: Allow
            Resource: 
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*'
              - !Sub 'arn:aws:kms:*:${AWS::AccountId}:alias/SagemakerStudioDomain'
              - !Sub 'arn:aws:kms:*:${AWS::AccountId}:alias/${EnvironmentResourcePrefix}*'
          - Sid: LambdaPublishLayer
            Effect: Allow
            Action:
              - 'lambda:PublishLayerVersion'
            Resource:
              - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:*'
          - Sid: S3
            Action:
              - 's3:CreateBucket'
              - 's3:GetBucketPolicy'
              - 's3:GetObject'
              - 's3:PutBucketCORS'
              - 's3:PutBucketLogging'
              - 's3:PutBucketPolicy'
              - 's3:PutBucketPublicAccessBlock'
              - 's3:PutBucketTagging'
              - 's3:PutBucketVersioning'
              - 's3:PutEncryptionConfiguration'
              - 's3:PutLifecycleConfiguration'
              - 's3:DeleteBucketPolicy'
              - 's3:DeleteBucket'
            Effect: Allow
            Resource: 'arn:aws:s3:::*'
          - Sid: SQS
            Effect: Allow
            Action:
              - 'sqs:CreateQueue'
              - 'sqs:SetQueueAttributes'
              - 'sqs:tagqueue'
              - 'sqs:deletequeue'
              - 'sqs:getqueueattributes'
            Resource: !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${EnvironmentResourcePrefix}*'
          - Effect: Allow
            Action:
              - 'sagemaker:AddTags'
              - 'sagemaker:CreateDomain'
              - 'sagemaker:DeleteDomain'
              - 'sagemaker:DescribeDomain'
              - 'sagemaker:AddTags'
              - 'sagemaker:CreateApp'
              - 'sagemaker:CreateUserProfile'
              - 'sagemaker:DescribeUserProfile'
              - 'sagemaker:DeleteUserProfile'
              - 'sagemaker:DescribeNotebookInstance'
              - 'sagemaker:CreateNotebookInstance'
              - 'sagemaker:DeleteNotebookInstance'
            Resource: 
              - !Sub 'arn:aws:sagemaker:*:${AWS::AccountId}:domain/*'
              - !Sub 'arn:aws:sagemaker:*:${AWS::AccountId}:user-profile/*'
              - !Sub 'arn:aws:sagemaker:us-east-1:${AWS::AccountId}:notebook-instance/${EnvironmentResourcePrefix}*'
          - Effect: Allow
            Action:
              - 'ssm:GetParameters'
              - 'ssm:PutParameter'
              - 'ssm:AddTagsToResource'
              - 'ssm:DeleteParameter'
            Resource: 
              - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:parameter/${EnvironmentResourcePrefix}*'
              - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:parameter/cdk*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogStreams'
            Resource: 'arn:aws:logs:*:*:*'
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
              - 'iam:*Role*'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/cdk-*'
          - Effect: Allow
            Action:
              - 'cloudformation:*'
            Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/CDKToolkit/*'
          - Effect: Allow
            Action:
              - 'ecr:SetRepositoryPolicy'
              - 'ecr:GetLifecyclePolicy'
              - 'ecr:PutImageScanningConfiguration'
              - 'ecr:DescribeRepositories'
              - 'ecr:CreateRepository'
              - 'ecr:DeleteRepository'
            Resource: !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/cdk-*'
          - Effect: Allow
            Action:
              - 'ssm:GetParameter'
              - 'ssm:PutParameter'
              - 'ssm:DeleteParameter'
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/cdk-bootstrap/*'
          - Effect: Allow
            Action:
              - 'lakeformation:*'
            Resource:
              - !Sub 'arn:aws:lakeformation:*:${AWS::AccountId}:catalog:*'
          - Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - !Sub 'arn:aws:s3:::cdktoolkit-stagingbucket-*'
  CDKCustomExecutionPolicy1:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${PolicyName}-2'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codepipeline:TagResource'
              - 'codepipeline:UntagResource'
              - 'codepipeline:CreatePipeline'
              - 'codepipeline:UpdatePipeline'
              - 'codepipeline:StartPipelineExecution'
              - 'codepipeline:GetPipeline'
              - 'codepipeline:GetPipelineState'
              - 'codepipeline:GetPipelineExecution'
              - 'codepipeline:List*'
              - 'codepipeline:DeletePipeline'
              - 'codestar-notifications:List*'
              - 'events:PutRule'
              - 'events:DescribeRule'
              - 'events:PutTargets'
              - 'events:RemoveTargets'
              - 'events:DeleteRule'
              - 'glue:*'
              - 'elasticfilesystem:CreateFileSystem'
              - 'elasticfilesystem:TagResource'
              - 'elasticfilesystem:DeleteFileSystem'
              - 'lambda:AddPermission'
              - 'lambda:CreateFunction'
              - 'lambda:Get*'
              - 'lambda:PutFunctionEventInvokeConfig'
              - 'lambda:InvokeFunction'
              - 'lambda:RemovePermission'
              - 'iam:AttachRolePolicy'
              - 'iam:CreateRole'
              - 'iam:CreateServiceLinkedRole'
              - 'iam:Get*'
              - 'iam:PutRolePolicy'
              - 'iam:TagRole'
              - 'iam:UnTagRole'
              - 'iam:DeleteRole'
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:PassRole'
              - 'iam:UpdateAssumeRolePolicy'
              - 'iam:DeletePolicy'
              - 'iam:List*'
              - 'ec2:Describe*'
              - 'ec2:CreateSecurityGroup'
              - 'ec2:createTags'
              - 'ec2:DeleteSecurityGroup'
              - 'ec2:RevokeSecurityGroupEgress'
              - 'ec2:AuthorizeSecurityGroupIngress'
              - 'ec2:AuthorizeSecurityGroupEgress'
              - 'ec2:RevokeSecurityGroupIngress'
              - 'ec2:AttachInternetGateway'
              - 'ec2:DetachInternetGateway'
              - 'ec2:AssociateRouteTable'
              - 'ec2:DisassociateRouteTable'
              - 'ec2:CreateRoute'
              - 'ec2:DeleteRoute'
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DeleteNetworkInterface'
              - 'kms:CreateKey'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:GetBucketPolicy'
            Resource:
              - 'arn:aws:s3::*:codepipeline-*'
          - Effect: Allow
            Action:
              - 'codestar-notifications:DescribeNotificationRule'
            Resource: '*'
            Condition:
              'StringLike':
                'codestar-notifications:NotificationsForResource': 'arn:aws:codepipeline:*'
          
