AWSTemplateFormatVersion: 2010-09-09
Description: Custom least privilege IAM policy for linking environments to dataall
Parameters:
  PolicyName:
    Description: IAM policy name (The same name must be used during CDK bootstrapping. Default is DataAllCustomCDKPolicy.)
    Type: String
    Default: 'DataAllCustomCDKPolicy'
  EnvironmentResourcePrefix:
    Description: The resource prefix value of the dataall environment. It MUST match the resource prefix that we use when we create the environment.
    Type: String
Resources:
  CDKCustomExecutionPolicy0:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Ref PolicyName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: KMS
            Action:
              - 'kms:CreateKey'
            Effect: Allow
            Resource: '*'
          - Sid: ec2
            Action:
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:CreateSecurityGroup'
              - 'ec2:createTags'
              - 'ec2:DeleteSecurityGroup'
              - 'ec2:RevokeSecurityGroupEgress'
              - 'ec2:AuthorizeSecurityGroupIngress'
              - 'ec2:AuthorizeSecurityGroupEgress'
              - 'ec2:RevokeSecurityGroupIngress'
              - 'ec2:AttachInternetGateway'
              - 'ec2:DetachInternetGateway'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeRouteTables'
              - 'ec2:AssociateRouteTable'
              - 'ec2:DisassociateRouteTable'
              - 'ec2:CreateRoute'
              - 'ec2:DeleteRoute'
            Effect: Allow
            Resource: '*'
          - Sid: Athena
            Effect: Allow
            Action: 'athena:CreateWorkGroup'
            Resource:
              - !Sub 'arn:${AWS::Partition}:athena:*:${AWS::AccountId}:workgroup/*'
          - Sid: IAM
            Action:
              - 'iam:CreatePolicy'
              - 'iam:GetPolicy'
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/*'
          - Sid: IAMRole
            Action:
              - 'iam:AttachRolePolicy'
              - 'iam:CreateRole'
              - 'iam:CreateServiceLinkedRole'
              - 'iam:GetRole'
              - 'iam:GetRolePolicy'
              - 'iam:PutRolePolicy'
              - 'iam:TagRole'
              - 'iam:UnTagRole'
              - 'iam:DeleteRole'
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:PassRole'
              - 'iam:UpdateAssumeRolePolicy'
              - 'iam:DeletePolicy'
              - 'iam:List*'
              - 'iam:GetServiceLastAccessedDetails'
            Effect: Allow
            Resource: '*'
          - Sid: IAMQuickSight
            Effect: Allow
            Action:
              - 'iam:CreatePolicyVersion'
              - 'iam:DeletePolicyVersion'
            Resource:
               - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/service-role/AWSQuickSight*'
          - Sid: QuickSight
            Effect: Allow
            Action:
              - 'ds:AuthorizeApplication'
              - 'ds:UnauthorizeApplication'
              - 'ds:CheckAlias'
              - 'ds:CreateAlias'
              - 'ds:DescribeDirectories'
              - 'ds:DescribeTrusts'
              - 'ds:DeleteDirectory'
              - 'ds:CreateIdentityPoolDirectory'
              - 'quicksight:CreateAdmin'
              - 'quicksight:CreateUser'
              - 'quicksight:Subscribe'
              - 'quicksight:GetGroupMapping'
              - 'quicksight:SearchDirectoryGroups'
              - 'quicksight:SetGroupMapping'
              - 'quicksight:RegisterUser'
              - 'quicksight:GetDashboardEmbedUrl'
              - 'quicksight:DescribeDashboardPermissions'
            Resource: '*'
          - Sid: QuickSightDeny
            Effect: Deny
            Action:
              - 'quicksight:Unsubscribe'
            Resource: '*'
          - Sid: KMSCreateAlias
            Action:
              - 'kms:CreateAlias'
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:kms:*:${AWS::AccountId}:alias/*'
          - Sid: KMSKey
            Action:
              - 's3:PutBucketAcl'
              - 's3:PutBucketNotification'
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${EnvironmentResourcePrefix}-logging-*'
          - Sid: ReadBuckets
            Action:
              - 'kms:CreateAlias'
              - 'kms:CreateGrant'
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
              - 'kms:EnableKeyRotation'
              - 'kms:Encrypt'
              - 'kms:GetKeyPolicy'
              - 'kms:GetKeyRotationStatus'
              - 'kms:ListResourceTags'
              - 'kms:PutKeyPolicy'
              - 'kms:TagResource'
            Effect: Allow
            Resource: !Sub 'arn:${AWS::Partition}:kms:*:${AWS::AccountId}:key/*'
          - Sid: Lambda
            Action:
              - 'lambda:AddPermission'
              - 'lambda:CreateFunction'
              - 'lambda:GetFunction'
              - 'lambda:GetFunctionCodeSigningConfig'
              - 'lambda:GetRuntimeManagementConfig'
              - 'lambda:PutFunctionEventInvokeConfig'
              - 'lambda:InvokeFunction'
              - 'lambda:RemovePermission'
            Effect: Allow
            Resource: '*'
          - Sid: LambdaPublishLayer
            Effect: Allow
            Action:
              - 'lambda:PublishLayerVersion'
            Resource:
              - !Sub 'arn:${AWS::Partition}:lambda:*:${AWS::AccountId}:layer:*'
          - Sid: S3
            Action:
              - 's3:CreateBucket'
              - 's3:GetBucketPolicy'
              - 's3:PutBucketCORS'
              - 's3:PutBucketLogging'
              - 's3:PutBucketPolicy'
              - 's3:PutBucketPublicAccessBlock'
              - 's3:PutBucketTagging'
              - 's3:PutBucketVersioning'
              - 's3:PutEncryptionConfiguration'
              - 's3:PutLifecycleConfiguration'
              - 's3:DeleteBucketPolicy'
              - 's3:DeleteBucket'
            Effect: Allow
            Resource: !Sub 'arn:${AWS::Partition}:s3:::*'
          - Sid: SQS
            Effect: Allow
            Action:
              - 'sqs:CreateQueue'
              - 'sqs:SetQueueAttributes'
            Resource: !Sub 'arn:${AWS::Partition}:sqs:*:${AWS::AccountId}:*'
          - Sid: SSM
            Effect: Allow
            Action:
              - 'ssm:GetParameters'
              - 'ssm:PutParameter'
            Resource: '*'
          - Sid: Logs
            Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogStreams'
            Resource: !Sub 'arn:${AWS::Partition}:logs:*:*:*'
          - Sid: STS
            Effect: Allow
            Action:
              - 'sts:AssumeRole'
              - 'iam:*Role*'
            Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-*'
          - Sid: CloudFormation
            Effect: Allow
            Action:
              - 'cloudformation:*'
            Resource: !Sub 'arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/CDKToolkit/*'
          - Sid: ECR
            Effect: Allow
            Action:
              - 'ecr:SetRepositoryPolicy'
              - 'ecr:GetLifecyclePolicy'
              - 'ecr:PutImageScanningConfiguration'
              - 'ecr:DescribeRepositories'
              - 'ecr:CreateRepository'
              - 'ecr:DeleteRepository'
            Resource: !Sub 'arn:${AWS::Partition}:ecr:*:${AWS::AccountId}:repository/cdk-*'
          - Sid: SSMTwo
            Effect: Allow
            Action:
              - 'ssm:GetParameter'
              - 'ssm:PutParameter'
              - 'ssm:DeleteParameter'
            Resource: !Sub 'arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/cdk-bootstrap/*'
          - Sid: CloudformationTwo
            Effect: Allow
            Action:
              - '*'
            Resource: '*'
            Condition:
              'ForAnyValue:StringEquals':
                'aws:CalledVia': 'cloudformation.amazonaws.com'
          - Sid: S3Staging
            Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}*'
          - Sid: Pipelines
            Effect: Allow
            Action:
              - 'codepipeline:TagResource'
              - 'codepipeline:UntagResource'
              - 'codepipeline:CreatePipeline'
              - 'codepipeline:UpdatePipeline'
              - 'codepipeline:StartPipelineExecution'
              - 'codepipeline:GetPipeline'
              - 'codepipeline:GetPipelineState'
              - 'codepipeline:GetPipelineExecution'
              - 'codepipeline:ListPipelineExecutions'
              - 'codepipeline:ListActionExecutions'
              - 'codepipeline:ListActionTypes'
              - 'codepipeline:ListPipelines'
              - 'codepipeline:ListTagsForResource'
              - 'codepipeline:DeletePipeline'
              - 'codestar-notifications:ListNotificationRules'
              - 'codestar-notifications:ListEventTypes'
              - 'codestar-notifications:ListTargets'
            Resource: '*'
          - Sid: PipelinesS3
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:GetBucketPolicy'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3::*:codepipeline-*'
          - Sid: CodeStarNotificationsReadOnly
            Effect: Allow
            Action:
              - 'codestar-notifications:DescribeNotificationRule'
            Resource: '*'
            Condition:
              'StringLike':
                'codestar-notifications:NotificationsForResource': !Sub 'arn:${AWS::Partition}:codepipeline:*'
          - Sid: Eventrules
            Effect: Allow
            Action:
              - 'events:PutRule'
              - 'events:DescribeRule'
              - 'events:PutTargets'
              - 'events:RemoveTargets'
              - 'events:DeleteRule'
            Resource: '*'
