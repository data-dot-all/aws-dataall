AWSTemplateFormatVersion: 2010-09-09
Description: Custom least privilege IAM policy for linking environments to dataall
Parameters:
  PolicyName:
    Description: IAM policy name (The same name must be used during CDK bootstrapping)
    Type: String
    Default: 'DataAllCustomCDKPolicy'
  EnvironmentResourcePrefix:
    Description: The resource prefix value of the dataall environment. It MUST match the resource prefix that we use when we create the environment.
    Type: String
Resources:
  CDKCustomExecutionPolicy0:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Ref PolicyName
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          - Sid: Athena
            Effect: Allow
            Action:
              - 'athena:CreateWorkGroup'
              - 'athena:*Tag*'
              - 'athena:GetWorkGroup'
              - 'athena:DeleteWorkGroup'
            Resource:
              - !Sub 'arn:${AWS::Partition}:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${EnvironmentResourcePrefix}*'

          - Sid: IAM
            Effect: Allow
            Action:
              - 'iam:CreatePolicy*'
              - 'iam:DeletePolicy*'
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRole'
              - 'iam:CreateRole'
              - 'iam:DeleteRolePolicy'
              - 'iam:*Tag*'
              - 'iam:PassRole'
              - 'iam:AttachRolePolicy'
              - 'iam:*ServiceLinkedRole'
              - 'iam:Get*'
              - 'iam:List*'
              - 'iam:UpdateAssumeRolePolicy'
              - 'iam:PutRolePolicy'
            Resource:
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/*'
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*'

          - Sid: IAMTwo
            Effect: Allow
            Action:
              - 'sts:AssumeRole'
              - 'iam:*Role*'
            Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-*'

          - Sid: Quicksight
            Effect: Allow
            Action:
              - 'ds:AuthorizeApplication'
              - 'ds:UnauthorizeApplication'
              - 'ds:CheckAlias'
              - 'ds:CreateAlias'
              - 'ds:Describe*'
              - 'ds:DeleteDirectory'
              - 'ds:CreateIdentityPoolDirectory'
              - 'quicksight:CreateAdmin'
              - 'quicksight:CreateUser'
              - 'quicksight:Subscribe'
              - 'quicksight:Get*'
              - 'quicksight:SearchDirectoryGroups'
              - 'quicksight:SetGroupMapping'
              - 'quicksight:RegisterUser'
              - 'quicksight:Describe*'
            Resource: '*'

          - Sid: QuicksightDeny
            Effect: Deny
            Action:
              - 'quicksight:Unsubscribe'
            Resource: '*'

          - Sid: KMS
            Effect: Allow
            Action:
              - 'kms:CreateKey'
              - 'kms:CreateAlias'
              - 'kms:CreateGrant'
              - 'kms:Decrypt'
              - 'kms:Describe*'
              - 'kms:EnableKeyRotation'
              - 'kms:Encrypt'
              - 'kms:Get*'
              - 'kms:List*'
              - 'kms:Generate*'
              - 'kms:PutKeyPolicy'
              - 'kms:DeleteAlias'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:*Tag*'
            Resource: '*'

          - Sid: Lambda
            Effect: Allow
            Action:
              - 'lambda:PublishLayerVersion'
              - 'lambda:DeleteLayerVersion'
              - 'lambda:DeleteFunction*'
              - 'lambda:*Tag*'
              - 'lambda:AddPermission'
              - 'lambda:CreateFunction'
              - 'lambda:Get*'
              - 'lambda:PutFunctionEventInvokeConfig'
              - 'lambda:InvokeFunction'
              - 'lambda:RemovePermission'
              - 'lambda:Update*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:*'
              - !Sub 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:${EnvironmentResourcePrefix}*'
              - !Sub 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvironmentResourcePrefix}*'

          - Sid: S3
            Effect: Allow
            Action:
              - 's3:CreateBucket'
              - 's3:GetBucketPolicy'
              - 's3:GetObject'
              - 's3:PutBucket*'
              - 's3:ListBucket'
              - 's3:PutEncryptionConfiguration'
              - 's3:PutLifecycleConfiguration'
              - 's3:DeleteBucketPolicy'
              - 's3:DeleteBucket'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::*'

          - Sid: S3CDK
            Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::cdktoolkit-stagingbucket-*'
              - !Sub 'arn:${AWS::Partition}:s3:::cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}*'

          - Sid: SQS
            Effect: Allow
            Action:
              - 'sqs:CreateQueue'
              - 'sqs:SetQueueAttributes'
              - 'sqs:*Tag*'
              - 'sqs:DeleteQueue'
              - 'sqs:GetQueueAttributes'
            Resource: !Sub 'arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${EnvironmentResourcePrefix}*'

          - Sid: Sagemaker
            Effect: Allow
            Action:
              - 'sagemaker:*Tag*'
              - 'sagemaker:CreateDomain'
              - 'sagemaker:DeleteDomain'
              - 'sagemaker:DescribeDomain'
              - 'sagemaker:CreateApp'
              - 'sagemaker:CreateUserProfile'
              - 'sagemaker:DescribeUserProfile'
              - 'sagemaker:DeleteUserProfile'
              - 'sagemaker:*NotebookInstance'
            Resource:
              - !Sub 'arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:domain/*'
              - !Sub 'arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/*'
              - !Sub 'arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:notebook-instance/${EnvironmentResourcePrefix}*'

          - Sid: SSM
            Effect: Allow
            Action:
              - 'ssm:Get*'
              - 'ssm:PutParameter'
              - 'ssm:*Tag*'
              - 'ssm:DeleteParameter'
            Resource:
              - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvironmentResourcePrefix}*'
              - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/cdk*'
              - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/cdk-bootstrap/*'

          - Sid: Logs
            Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:Put*'
              - 'logs:DescribeLog*'
              - 'logs:DeleteLog*'
              - 'logs:DeleteRetentionPolicy'
              - 'logs:*Tag*'
            Resource: !Sub 'arn:${AWS::Partition}:logs:*:*:*'

          - Sid: CFN
            Effect: Allow
            Action:
              - 'cloudformation:*'
            Resource: !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/CDKToolkit/*'

          - Sid: ECR
            Effect: Allow
            Action:
              - 'ecr:SetRepositoryPolicy'
              - 'ecr:GetLifecyclePolicy'
              - 'ecr:PutImageScanningConfiguration'
              - 'ecr:DescribeRepositories'
              - 'ecr:CreateRepository'
              - 'ecr:DeleteRepository'
            Resource: !Sub 'arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/cdk-*'

          - Sid: LF
            Effect: Allow
            Action:
              - 'lakeformation:*'
              - 'glue:*'
            Resource: '*'

          - Sid: EC2
            Effect: Allow
            Action:
              - 'ec2:Describe*'
              - 'ec2:*SecurityGroup*'
              - 'ec2:Create*'
              - 'ec2:*InternetGateway*'
              - 'ec2:Associate*'
              - 'ec2:Disassociate*'
              - 'ec2:Delete*'
              - 'ec2:Modify*'
              - 'ec2:Get*'
              - 'ec2:*Address'
              - 'elasticfilesystem:CreateFileSystem'
              - 'elasticfilesystem:TagResource'
              - 'elasticfilesystem:UntagResource'
              - 'elasticfilesystem:DeleteFileSystem'
            Resource: '*'

          - Sid: EC2Deny
            Effect: Deny
            Action:
              - 'ec2:*Instance*'
            Resource: '*'

          - Sid: CodePipeline
            Effect: Allow
            Action:
              - 'codepipeline:*Tag*'
              - 'codepipeline:CreatePipeline'
              - 'codepipeline:UpdatePipeline'
              - 'codepipeline:StartPipelineExecution'
              - 'codepipeline:GetPipeline*'
              - 'codepipeline:List*'
              - 'codepipeline:DeletePipeline'
              - 'codestar-notifications:List*'
              - 'codestar-notifications:DescribeNotificationRule'
              - 'codecommit:Create*'
              - 'codecommit:DeleteRepository'
              - 'codecommit:*Tag*'
              - 'codebuild:*Project*'
            Resource: '*'

          - Sid: Events
            Effect: Allow
            Action:
              - 'events:PutRule'
              - 'events:DescribeRule'
              - 'events:PutTargets'
              - 'events:RemoveTargets'
              - 'events:DeleteRule'
            Resource: '*'
